{"version":3,"sources":["services/CustomerService.js","components/ListCustomerComponent.jsx","services/CouponService.js","components/ListCouponComponent.jsx","components/HeaderComponent.js","components/FooterComponent.jsx","components/CreateCustomerComponent.jsx","components/CreateCouponComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["CUSTOMER_API_BASE_URL","client","axios","create","addOAuthInterceptor","key","secret","algorithm","get","customer","post","customerId","put","delete","params","force","ListCustomerComponent","props","state","customers","addCustomer","bind","editCustomer","deleteCustomer","navigateCoupons","id","CustomerService","then","res","setState","filter","this","history","push","getCustomers","console","log","data","className","onClick","map","first_name","last_name","email","username","style","marginLeft","Component","COUPON_API_BASE_URL","coupon","couponId","ListCouponComponent","coupons","addCoupon","editCoupon","deleteCoupon","navigateCustomers","CouponService","getCoupons","code","amount","discount_type","HeaderComponent","loggedIn","window","sessionStorage","getItem","initialHref","location","href","removeItem","setItem","JSON","stringify","FooterComponent","CreateCustomerComponent","saveOrUpdateCustomer","e","preventDefault","createCustomer","updateCustomer","changeFirstNameHandler","event","target","value","changeLastNameHandler","changeEmailHandler","changeUsernameHandler","match","getCustomerById","getTitle","placeholder","name","onChange","cancel","CreateCouponComponent","saveOrUpdateCoupon","createCoupon","updateCoupon","changeAmountHandler","changeCodeHandler","changeDiscountTypeHandler","getCouponById","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b633a786.chunk.js","sourcesContent":["import axios from 'axios';\nimport addOAuthInterceptor from \"axios-oauth-1.0a\";\n\nconst CUSTOMER_API_BASE_URL = \"http://studentdocker.informatika.uni-mb.si:20285/wp-json/wc/v3/customers\";\n\nconst client = axios.create();\n\naddOAuthInterceptor(client, {\n key: \"ck_972561c1c9fc45e1a03c9ee8751a0acae3d61cd8\",\n secret: \"cs_63446b19dc6f05d9e843980df6d2dc16f8ce7843\",\nalgorithm: \"HMAC-SHA1\",\n});\n\nclass CustomerService {\n\n    getCustomers(){\n        return client.get(CUSTOMER_API_BASE_URL);\n    }\n\n    createCustomer(customer){\n        return client.post(CUSTOMER_API_BASE_URL, customer);\n    }\n\n    getCustomerById(customerId){\n        return client.get(CUSTOMER_API_BASE_URL + '/' + customerId);\n    }\n\n    updateCustomer(customer, customerId){\n        return client.put(CUSTOMER_API_BASE_URL + '/' + customerId, customer);\n    }\n\n    deleteCustomer(customerId){\n        return client.delete(CUSTOMER_API_BASE_URL + '/' + customerId,{ params: {\n            force:true\n          }});\n    }\n}\n\nexport default new CustomerService()","import React, { Component } from 'react'\nimport CustomerService from '../services/CustomerService'\n\nclass ListCustomerComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                customers: []\n        }\n        this.addCustomer = this.addCustomer.bind(this);\n        this.editCustomer = this.editCustomer.bind(this);\n        this.deleteCustomer = this.deleteCustomer.bind(this);\n        this.navigateCoupons = this.navigateCoupons.bind(this);\n    }\n\n    deleteCustomer(id){\n        CustomerService.deleteCustomer(id).then( res => {\n            this.setState({customers: this.state.customers.filter(customer => customer.id !== id)});\n        });\n    }\n    editCustomer(id){\n        this.props.history.push(`/add-customer/${id}`);\n    }\n\n    componentDidMount(){\n        CustomerService.getCustomers().then((res) => {\n            console.log(res)\n            this.setState({ customers: res.data});\n        });\n    }\n\n    addCustomer(){\n        this.props.history.push('/add-customer/_add');\n    }\n\n    navigateCoupons() {\n        this.props.history.push('/coupons');\n    }\n\n    render() {\n        return (\n            <div>\n                 <h2 className=\"text-center\">Customers List</h2>\n                 <div className = \"row\">\n                    <button className=\"btn btn-primary\" onClick={this.addCustomer}> Add Customer</button>\n                    &nbsp;\n                    <button className=\"btn btn-secondary\" onClick={this.navigateCoupons}> Coupons</button>\n                 </div>\n                 <br></br>\n                 <div className = \"row\">\n                        <table className = \"table table-striped table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th> First name</th>\n                                    <th> Last name</th>\n                                    <th> Email</th>\n                                    <th> Username</th>\n                                    <th> Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.customers.map(\n                                        customer => \n                                        <tr key = {customer.id}>\n                                             <td> { customer.first_name} </td>   \n                                             <td> {customer.last_name}</td>\n                                             <td> {customer.email}</td>\n                                             <td> {customer.username}</td>\n                                             <td>\n                                                 <button onClick={ () => this.editCustomer(customer.id)} className=\"btn btn-info\">Update </button>\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteCustomer(customer.id)} className=\"btn btn-danger\">Delete </button>\n                                             </td>\n                                        </tr>\n                                    )\n                                }\n                            </tbody>\n                        </table>\n                 </div>\n            </div>\n        )\n    }\n}\n\nexport default ListCustomerComponent","import axios from 'axios';\nimport addOAuthInterceptor from \"axios-oauth-1.0a\";\n\nconst COUPON_API_BASE_URL = \"http://studentdocker.informatika.uni-mb.si:20285/wp-json/wc/v3/coupons\";\n\nconst client = axios.create();\n\naddOAuthInterceptor(client, {\n    key: \"ck_972561c1c9fc45e1a03c9ee8751a0acae3d61cd8\",\n    secret: \"cs_63446b19dc6f05d9e843980df6d2dc16f8ce7843\",\n    algorithm: \"HMAC-SHA1\",\n});\n\nclass CouponService {\n\n    getCoupons(){\n        return client.get(COUPON_API_BASE_URL);\n    }\n\n    createCoupon(coupon){\n        return client.post(COUPON_API_BASE_URL, coupon);\n    }\n\n    getCouponById(couponId){\n        return client.get(COUPON_API_BASE_URL + '/' + couponId);\n    }\n\n    updateCoupon(coupon, couponId){\n        return client.put(COUPON_API_BASE_URL + '/' + couponId, coupon);\n    }\n\n    deleteCoupon(couponId){\n        return client.delete(COUPON_API_BASE_URL + '/' + couponId,{ params: {\n            force:true\n          }});\n    }\n}\n\nexport default new CouponService()","import React, { Component } from 'react'\nimport CouponService from '../services/CouponService'\n\nclass ListCouponComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                coupons: []\n        }\n        this.addCoupon = this.addCoupon.bind(this);\n        this.editCoupon = this.editCoupon.bind(this);\n        this.deleteCoupon = this.deleteCoupon.bind(this);\n        this.navigateCustomers = this.navigateCustomers.bind(this);\n    }\n\n    deleteCoupon(id){\n        CouponService.deleteCoupon(id).then( res => {\n            this.setState({coupons: this.state.coupons.filter(coupon => coupon.id !== id)});\n        });\n    }\n\n    editCoupon(id){\n        this.props.history.push(`/add-coupon/${id}`);\n    }\n\n    componentDidMount(){\n        CouponService.getCoupons().then((res) => {\n            console.log(res)\n            this.setState({ coupons: res.data});\n        });\n    }\n\n    addCoupon(){\n        this.props.history.push('/add-coupon/_add');\n    }\n\n    navigateCustomers() {\n        this.props.history.push('/customers');\n    }\n\n    render() {\n        return (\n            <div>\n                 <h2 className=\"text-center\">Coupon List</h2>\n                 <div className = \"row\">\n                    <button className=\"btn btn-primary\" onClick={this.addCoupon}> Add Coupon</button>\n                    &nbsp;\n                    <button className=\"btn btn-secondary\" onClick={this.navigateCustomers}> Customers</button>\n                 </div>\n                 <br></br>\n                 <div className = \"row\">\n                        <table className = \"table table-striped table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th> Code</th>\n                                    <th> Amount</th>\n                                    <th> Discount Type</th>\n                                    <th> Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.coupons.map(\n                                        coupon => \n                                        <tr key = {coupon.id}>\n                                             <td> { coupon.code} </td>   \n                                             <td> {coupon.amount}</td>\n                                             <td> {coupon.discount_type}</td>\n                                             <td>\n                                                 <button onClick={ () => this.editCoupon(coupon.id)} className=\"btn btn-info\">Update </button>\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteCoupon(coupon.id)} className=\"btn btn-danger\">Delete </button>\n                                             </td>\n                                        </tr>\n                                    )\n                                }\n                            </tbody>\n                        </table>\n                 </div>\n            </div>\n        )\n    }\n}\n\nexport default ListCouponComponent\n","import React, { Component } from 'react'\n\nclass HeaderComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { loggedIn: window.sessionStorage.getItem(\"user\") };\n\n    }\n\n\n    render() {\n        const { loggedIn } = this.state;\n        var initialHref = window.location.href;\n        return (\n            <div>\n                <header>\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                        <div><a href=\"./\" className=\"navbar-brand\">Customer & Coupon Management App</a></div>\n                        {loggedIn\n                            ? <button style={{ marginLeft: \"10px\" }} onClick={() => {\n                                window.sessionStorage.removeItem(\"user\"); \n                                this.setState({ loggedIn: !loggedIn }); \n                                window.location = initialHref;\n                            }} className=\"btn btn-primary\">Log out </button>\n                            : <button style={{ marginLeft: \"10px\" }} onClick={() => {\n                                window.sessionStorage.setItem(\"user\", JSON.stringify({\n                                    \"username\": \"admin\",\n                                    \"password\": \"1002335060\"\n                                })); \n                                this.setState({ loggedIn: !loggedIn }); \n                                window.location = initialHref;\n                            }} className=\"btn btn-primary\">Log in </button>\n                        }\n\n                    </nav>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default HeaderComponent\n","import React, { Component } from 'react'\n\nclass FooterComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <footer className=\"footer\">\n                    <span className=\"text-muted\">EPDP</span>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default FooterComponent\n","import React, { Component } from 'react'\nimport CustomerService from '../services/CustomerService';\n\nclass CreateCustomerComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            first_name: '',\n            last_name: '',\n            email: '',\n            username: ''\n        }\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\n        this.changeUsernameHandler = this.changeUsernameHandler.bind(this);\n        this.saveOrUpdateCustomer = this.saveOrUpdateCustomer.bind(this);\n    }\n\n    componentDidMount(){\n\n        if(this.state.id === '_add'){\n            return\n        }else{\n            CustomerService.getCustomerById(this.state.id).then( (res) =>{\n                let customer = res.data;\n                this.setState({first_name: customer.first_name,\n                    last_name: customer.last_name,\n                    email : customer.email,\n                    username : customer.username\n                });\n            });\n        }        \n    }\n    saveOrUpdateCustomer = (e) => {\n        e.preventDefault();\n        let customer = {first_name: this.state.first_name, last_name: this.state.last_name, email: this.state.email, username: this.state.username};\n        console.log('customer => ' + JSON.stringify(customer));\n\n        if(this.state.id === '_add'){\n            CustomerService.createCustomer(customer).then(res =>{\n                this.props.history.push('/customers');\n            });\n        }else{\n            CustomerService.updateCustomer(customer, this.state.id).then( res => {\n                this.props.history.push('/customers');\n            });\n        }\n    }\n    \n    changeFirstNameHandler= (event) => {\n        this.setState({first_name: event.target.value});\n    }\n\n    changeLastNameHandler= (event) => {\n        this.setState({last_name: event.target.value});\n    }\n\n    changeEmailHandler= (event) => {\n        this.setState({email: event.target.value});\n    }\n\n    changeUsernameHandler= (event) => {\n        this.setState({username: event.target.value});\n    }\n\n    cancel(){\n        this.props.history.push('/customers');\n    }\n\n    getTitle(){\n        if(this.state.id === '_add'){\n            return <h3 className=\"text-center\">Add Customer</h3>\n        }else{\n            return <h3 className=\"text-center\">Update Customer</h3>\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <br></br>\n                   <div className = \"container\">\n                        <div className = \"row\">\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                                {\n                                    this.getTitle()\n                                }\n                                <div className = \"card-body\">\n                                    <form>\n                                        <div className = \"form-group\">\n                                            <label> First Name: </label>\n                                            <input placeholder=\"First Name\" name=\"first_name\" className=\"form-control\" \n                                                value={this.state.first_name} onChange={this.changeFirstNameHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Last Name: </label>\n                                            <input placeholder=\"Last Name\" name=\"last_name\" className=\"form-control\" \n                                                value={this.state.last_name} onChange={this.changeLastNameHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Email: </label>\n                                            <input placeholder=\"Email Address\" name=\"email\" className=\"form-control\" \n                                                value={this.state.email} onChange={this.changeEmailHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Username: </label>\n                                            <input placeholder=\"Username\" name=\"username\" className=\"form-control\" \n                                                value={this.state.username} onChange={this.changeUsernameHandler}/>\n                                        </div>\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateCustomer}>Save</button>\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateCustomerComponent\n","import React, { Component } from 'react'\nimport CouponService from '../services/CouponService';\n\nclass CreateCouponComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            amount: '',\n            code: '',\n            discount_type: ''\n        }\n        this.changeAmountHandler = this.changeAmountHandler.bind(this);\n        this.changeCodeHandler = this.changeCodeHandler.bind(this);\n        this.changeDiscountTypeHandler = this.changeDiscountTypeHandler.bind(this);\n        this.saveOrUpdateCoupon = this.saveOrUpdateCoupon.bind(this);\n    }\n\n    componentDidMount(){\n\n        if(this.state.id === '_add'){\n            return\n        }else{\n            CouponService.getCouponById(this.state.id).then( (res) =>{\n                let coupon = res.data;\n                this.setState({amount: coupon.amount,\n                    code: coupon.code,\n                    discount_type : coupon.discount_type\n                });\n            });\n        }        \n    }\n    saveOrUpdateCoupon = (e) => {\n        e.preventDefault();\n        let coupon = {amount: this.state.amount,code: this.state.code, discount_type: this.state.discount_type};\n        console.log('coupon => ' + JSON.stringify(coupon));\n\n        if(this.state.id === '_add'){\n            CouponService.createCoupon(coupon).then(res =>{\n                this.props.history.push('/coupons');\n            });\n        }else{\n            CouponService.updateCoupon(coupon, this.state.id).then( res => {\n                this.props.history.push('/coupons');\n            });\n        }\n    }\n    \n    changeAmountHandler= (event) => {\n        this.setState({amount: event.target.value});\n    }\n\n    changeCodeHandler= (event) => {\n        this.setState({code: event.target.value});\n    }\n\n    changeDiscountTypeHandler= (event) => {\n        this.setState({discount_type: event.target.value});\n    }\n\n    cancel(){\n        this.props.history.push('/coupons');\n    }\n\n    getTitle(){\n        if(this.state.id === '_add'){\n            return <h3 className=\"text-center\">Add Coupon</h3>\n        }else{\n            return <h3 className=\"text-center\">Update Coupon</h3>\n        }\n    }\n    render() {\n        return (\n            <div>\n                <br></br>\n                   <div className = \"container\">\n                        <div className = \"row\">\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                                {\n                                    this.getTitle()\n                                }\n                                <div className = \"card-body\">\n                                    <form>\n                                        <div className = \"form-group\">\n                                            <label> Amount: </label>\n                                            <input placeholder=\"Amount\" name=\"amount\" className=\"form-control\" \n                                                value={this.state.amount} onChange={this.changeAmountHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Code: </label>\n                                            <input placeholder=\"Code\" name=\"code\" className=\"form-control\" \n                                                value={this.state.code} onChange={this.changeCodeHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Discount type: </label>\n                                            <input placeholder=\"DiscountType\" name=\"discount_type\" className=\"form-control\" \n                                                value={this.state.discount_type} onChange={this.changeDiscountTypeHandler}/>\n                                        </div>\n\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateCoupon}>Save</button>\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n\n                   </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateCouponComponent\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ListCustomerComponent from './components/ListCustomerComponent';\nimport ListCouponComponent from './components/ListCouponComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreateCustomerComponent from './components/CreateCustomerComponent';\nimport CreateCouponComponent from './components/CreateCouponComponent';\n\nfunction App() {\n  const loggedIn = window.sessionStorage.getItem(\"user\");\n  return (\n    <div>\n        <Router>\n              <HeaderComponent />\n                <div className=\"container\">\n                { loggedIn\n                    ? \n                    <Switch> \n                      <Route path = \"/\" exact component = {ListCustomerComponent}></Route>\n                      <Route path = \"/customers\" component = {ListCustomerComponent}></Route>\n                      <Route path = \"/coupons\" component = {ListCouponComponent}></Route>\n                      <Route path = \"/add-customer/:id\" component = {CreateCustomerComponent}></Route>\n                      <Route path = \"/add-coupon/:id\" component = {CreateCouponComponent}></Route>\n                    </Switch>\n                    : <div>You need to log in!</div>\n                    }\n                </div>\n              <FooterComponent />\n        </Router>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}